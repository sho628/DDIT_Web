-- 기 생성된 MEMBER 테이블을 인증용 테이블로 활용 예제
CREATE TABLE ROLES (
	AUTHORITY VARCHAR(50) NOT NULL,
	ROLE_NAME VARCHAR(50),
	DESCRIPTION VARCHAR(100),
	CREATE_DATE DATE,
	MODIFY_DATE DATE,
	CONSTRAINT PK_ROLES PRIMARY KEY(AUTHORITY)
);

-- https://www.egovframe.go.kr/wiki/doku.php?id=egovframework:rte2:fdl:server_security:architecture 및 spring-security.pdf 부교재 참고

INSERT INTO ROLES(AUTHORITY, ROLE_NAME, DESCRIPTION, CREATE_DATE, MODIFY_DATE) VALUES('IS_AUTHENTICATED_ANONYMOUSLY', 'ANONYMOUS', '익명사용자',SYSDATE, SYSDATE);
INSERT INTO ROLES(AUTHORITY, ROLE_NAME, DESCRIPTION, CREATE_DATE, MODIFY_DATE) VALUES('IS_AUTHENTICATED_REMEMBERED', 'REMEMBERED', 'REMEMBERED 사용자',SYSDATE, SYSDATE);
INSERT INTO ROLES(AUTHORITY, ROLE_NAME, DESCRIPTION, CREATE_DATE, MODIFY_DATE) VALUES('IS_AUTHENTICATED_FULLY', 'AUTHENTICATED', '인증된 사용자',SYSDATE, SYSDATE);
INSERT INTO ROLES(AUTHORITY, ROLE_NAME, DESCRIPTION, CREATE_DATE, MODIFY_DATE) VALUES('RESTRICTED', 'RESTRICTED', '제한된 사용자',SYSDATE, SYSDATE);
INSERT INTO ROLES(AUTHORITY, ROLE_NAME, DESCRIPTION, CREATE_DATE, MODIFY_DATE) VALUES('USER', 'USER', '일반 사용자',SYSDATE, SYSDATE);
INSERT INTO ROLES(AUTHORITY, ROLE_NAME, DESCRIPTION, CREATE_DATE, MODIFY_DATE) VALUES('A', 'A', 'A 업무',SYSDATE, SYSDATE);
INSERT INTO ROLES(AUTHORITY, ROLE_NAME, DESCRIPTION, CREATE_DATE, MODIFY_DATE) VALUES('B', 'B', 'B 업무',SYSDATE, SYSDATE);
INSERT INTO ROLES(AUTHORITY, ROLE_NAME, DESCRIPTION, CREATE_DATE, MODIFY_DATE) VALUES('SUPERVISOR', 'SUPERVISOR', '상위등급사용자',SYSDATE, SYSDATE);
INSERT INTO ROLES(AUTHORITY, ROLE_NAME, DESCRIPTION, CREATE_DATE, MODIFY_DATE) VALUES('ADMIN', 'ADMIN', '시스템관리자',SYSDATE, SYSDATE);

---- 새로운 업무에 해당하는 역할이 등록되는 경우, RESTRICTED 의 자식 형태로 계층구조를 등록함.
CREATE TABLE ROLES_HIERARCHY (
	PARENT_ROLE VARCHAR(50) NOT NULL,
	CHILD_ROLE VARCHAR(50) NOT NULL,
	CONSTRAINT PK_ROLES_HIERARCHY PRIMARY KEY(PARENT_ROLE,CHILD_ROLE),
	CONSTRAINT FK_ROLES1 FOREIGN KEY(PARENT_ROLE) REFERENCES ROLES(AUTHORITY),
	CONSTRAINT FK_ROLES2 FOREIGN KEY(CHILD_ROLE) REFERENCES ROLES (AUTHORITY)
);

INSERT INTO ROLES_HIERARCHY(CHILD_ROLE, PARENT_ROLE) VALUES('ADMIN', 'SUPERVISOR');
INSERT INTO ROLES_HIERARCHY(CHILD_ROLE, PARENT_ROLE) VALUES('SUPERVISOR', 'USER');
INSERT INTO ROLES_HIERARCHY(CHILD_ROLE, PARENT_ROLE) VALUES('USER', 'RESTRICTED');
INSERT INTO ROLES_HIERARCHY(CHILD_ROLE, PARENT_ROLE) VALUES('RESTRICTED', 'IS_AUTHENTICATED_FULLY');
INSERT INTO ROLES_HIERARCHY(CHILD_ROLE, PARENT_ROLE) VALUES('IS_AUTHENTICATED_FULLY', 'IS_AUTHENTICATED_REMEMBERED');
INSERT INTO ROLES_HIERARCHY(CHILD_ROLE, PARENT_ROLE) VALUES('IS_AUTHENTICATED_REMEMBERED', 'IS_AUTHENTICATED_ANONYMOUSLY');
INSERT INTO ROLES_HIERARCHY(CHILD_ROLE, PARENT_ROLE) VALUES('SUPERVISOR', 'A');
INSERT INTO ROLES_HIERARCHY(CHILD_ROLE, PARENT_ROLE) VALUES('A', 'RESTRICTED');
INSERT INTO ROLES_HIERARCHY(CHILD_ROLE, PARENT_ROLE) VALUES('SUPERVISOR', 'B');
INSERT INTO ROLES_HIERARCHY(CHILD_ROLE, PARENT_ROLE) VALUES('B', 'RESTRICTED');

---- 역할 계층 구조 조회 
SELECT CHILD_ROLE || ' > ' || PARENT_ROLE HIERARYSTRING 
FROM ROLES_HIERARCHY 
START WITH CHILD_ROLE = 'ADMIN' 
CONNECT BY PRIOR PARENT_ROLE = CHILD_ROLE;

CREATE TABLE AUTHORITIES (
	USERNAME VARCHAR2(50) NOT NULL,
	AUTHORITY VARCHAR2(50) NOT NULL,
    CONSTRAINT PK_AUTHORITIES PRIMARY KEY(USERNAME,AUTHORITY),
	CONSTRAINT FK_AUTHORITIES_MEMBER FOREIGN KEY(USERNAME) REFERENCES MEMBER(MEM_ID),	
	CONSTRAINT FK_AUTHORITIES_ROLE FOREIGN KEY(AUTHORITY) REFERENCES ROLES(AUTHORITY)
);

-- MEMBER 테이블의 MEM_ROLE 에 있는 역할 정보를 AUTHORITIES 에 복사
-- ADMIN, SUPERVISIOR, USER, A 등의 역할 부여
--INSERT INTO AUTHORITIES (USERNAME, AUTHORITY) SELECT MEM_ID, MEM_ROLE FROM MEMBER;
UPDATE AUTHORITIES SET AUTHORITY = 'ADMIN' WHERE USERNAME = 'c001';
UPDATE AUTHORITIES SET AUTHORITY = 'SUPERVISOR' WHERE USERNAME = 'd001';

-- 그룹 혹은 부서별 인가 설정에 활용
CREATE TABLE GROUPS (
	GROUP_ID NUMBER(5),
	GROUP_NAME VARCHAR2(50) NOT NULL,
    CONSTRAINT PK_GROUPS PRIMARY KEY(GROUP_ID)   
);

INSERT INTO GROUPS (GROUP_ID, GROUP_NAME) VALUES (1, 'GROUP_A');
                                     
CREATE TABLE GROUP_AUTHORITIES (
	GROUP_ID NUMBER(5) NOT NULL,
	AUTHORITY VARCHAR(50) NOT NULL,
	CONSTRAINT FK_GROUP_AUTHORITIES_GROUP FOREIGN KEY(GROUP_ID) REFERENCES GROUPS(GROUP_ID)
);

INSERT INTO GROUP_AUTHORITIES(GROUP_ID, AUTHORITY) VALUES (1, 'A');

CREATE TABLE GROUP_MEMBERS (
	GM_ID NUMBER(5), -- 일련번호
	USERNAME VARCHAR(50) NOT NULL,
	GROUP_ID NUMBER(5) NOT NULL,
	CONSTRAINT FK_GROUP_MEMBERS_GROUP FOREIGN KEY(GROUP_ID) REFERENCES GROUPS(GROUP_ID),
	CONSTRAINT FK_GROUP_MEMBERS_MEMBER FOREIGN KEY(USERNAME) REFERENCES MEMBER(MEM_ID)
);

CREATE SEQUENCE GROUP_MEMBER_SEQUENCE START WITH 1 INCREMENT BY 1 NOMAXVALUE;

INSERT INTO GROUP_MEMBERS (GM_ID, USERNAME, GROUP_ID) VALUES (GROUP_MEMBER_SEQUENCE.NEXTVAL, 'n001', 1);


-- RememberMe 기능 구현을 위해 단순 쿠키를 사용하지 않고, 데이터베이스 기반으로 구현하는 경우.
CREATE TABLE PERSISTENT_LOGINS (
	USERNAME VARCHAR2(64) NOT NULL,
	SERIES VARCHAR2(64) PRIMARY KEY,
	TOKEN VARCHAR2(64) NOT NULL,
	LAST_USED TIMESTAMP NOT NULL
);

-- 보호 자원과 관련된 스키마, 메뉴 구조로 활용 가능.
CREATE TABLE SECURED_RESOURCES (
	RESOURCE_ID VARCHAR(10) NOT NULL,
	RESOURCE_NAME VARCHAR(50),
	RESOURCE_PATTERN VARCHAR(300) NOT NULL,
	HTTP_METHOD VARCHAR2(20),
	DESCRIPTION VARCHAR(100),
	RESOURCE_TYPE VARCHAR(10),  -- url, method, pointcut 등의 보호 방법에 대한 설정
	SORT_ORDER NUMBER(4) DEFAULT 9999, -- 접근 제어 설정이 상충하는 자원 설정이 있는 경우 우선순위 부여, 최종단 주소의 경우 우선순위가 가장 높게 설정
	CREATE_DATE DATE,
	MODIFY_DATE DATE,
	RESOURCE_PARENT VARCHAR(10), -- 메뉴간 카테고리 형성을 위한 계층 구조
	CONSTRAINT PK_SECURED_RESOURCES PRIMARY KEY(RESOURCE_ID),
	CONSTRAINT FK_SECURED_RESOURCES_RESOURCES FOREIGN KEY (RESOURCE_PARENT) REFERENCES SECURED_RESOURCES(RESOURCE_ID)
);

-- 자원 등록 예
INSERT ALL
INTO SECURED_RESOURCES( RESOURCE_ID, RESOURCE_NAME, RESOURCE_PATTERN, RESOURCE_TYPE, DESCRIPTION )
VALUES ( 'web-000001', 'exceptUrl', '/**', 'url', '일반 페이지' )

INTO SECURED_RESOURCES( RESOURCE_ID, RESOURCE_NAME, RESOURCE_PATTERN, RESOURCE_TYPE, DESCRIPTION, SORT_ORDER, RESOURCE_PARENT)
VALUES ( 'web-000002', 'login', '/login/**', 'url', '로그인 관련', 1, 'web-000001'  )
INTO SECURED_RESOURCES( RESOURCE_ID, RESOURCE_NAME, RESOURCE_PATTERN, RESOURCE_TYPE, DESCRIPTION, SORT_ORDER, RESOURCE_PARENT)
VALUES ( 'web-000003', 'static', '/resources/**', 'url', '정적자원', 5, 'web-000001'  )
INTO SECURED_RESOURCES( RESOURCE_ID, RESOURCE_NAME, RESOURCE_PATTERN, RESOURCE_TYPE, DESCRIPTION, SORT_ORDER, RESOURCE_PARENT)
VALUES ( 'web-000004', 'static', '/**/*.js', 'url', '정적자원(js)', 1, 'web-000003' )
INTO SECURED_RESOURCES( RESOURCE_ID, RESOURCE_NAME, RESOURCE_PATTERN, RESOURCE_TYPE, DESCRIPTION, SORT_ORDER, RESOURCE_PARENT)
VALUES ( 'web-000005', 'static', '/**/*.css', 'url', '정적자원(css)', 1, 'web-000003'  )
INTO SECURED_RESOURCES( RESOURCE_ID, RESOURCE_NAME, RESOURCE_PATTERN, RESOURCE_TYPE, DESCRIPTION, SORT_ORDER, RESOURCE_PARENT)
VALUES ( 'web-000006', 'static', '/**/*.html', 'url', '정적자원(html)', 1, 'web-000003'  )
INTO SECURED_RESOURCES( RESOURCE_ID, RESOURCE_NAME, RESOURCE_PATTERN, RESOURCE_TYPE, DESCRIPTION, SORT_ORDER, RESOURCE_PARENT)
VALUES ( 'web-000007', 'static', '/**/images/*', 'url', '정적자원(image)', 1, 'web-000003'  )

INTO SECURED_RESOURCES( RESOURCE_ID, RESOURCE_NAME, RESOURCE_PATTERN, RESOURCE_TYPE, DESCRIPTION, SORT_ORDER, RESOURCE_PARENT)
VALUES ( 'web-000012', 'boardUrl', '/board/**', 'url', '게시판', 9, 'web-000001')
INTO SECURED_RESOURCES( RESOURCE_ID, RESOURCE_NAME, RESOURCE_PATTERN, RESOURCE_TYPE, DESCRIPTION, SORT_ORDER, RESOURCE_PARENT  )
VALUES ( 'web-000013', 'boardListUrl', '/board/boardList.do', 'url', '목록조회', 1, 'web-000012'  )
INTO SECURED_RESOURCES( RESOURCE_ID, RESOURCE_NAME, RESOURCE_PATTERN, RESOURCE_TYPE, DESCRIPTION, SORT_ORDER, RESOURCE_PARENT  )
VALUES ( 'web-000014', 'boardViewUrl', '/board/*', 'url', '상세조회', 2, 'web-000012'  )
INTO SECURED_RESOURCES( RESOURCE_ID, RESOURCE_NAME, RESOURCE_PATTERN, RESOURCE_TYPE, DESCRIPTION, SORT_ORDER, RESOURCE_PARENT  )
VALUES ( 'web-000015', 'recommendUrl', '/board/recommend.do', 'url', '글추천', 1, 'web-000012'  )
INTO SECURED_RESOURCES( RESOURCE_ID, RESOURCE_NAME, RESOURCE_PATTERN, RESOURCE_TYPE, DESCRIPTION, SORT_ORDER, RESOURCE_PARENT  )
VALUES ( 'web-000016', 'downloadUrl', '/board/download.do', 'url', '다운로드', 1, 'web-000012'  )
INTO SECURED_RESOURCES( RESOURCE_ID, RESOURCE_NAME, RESOURCE_PATTERN, RESOURCE_TYPE, DESCRIPTION, SORT_ORDER, RESOURCE_PARENT  )
VALUES ( 'web-000017', 'boardUpdateUrl', '/board/boardUpdate.do', 'url', '글수정', 1, 'web-000012'  )
INTO SECURED_RESOURCES( RESOURCE_ID, RESOURCE_NAME, RESOURCE_PATTERN, RESOURCE_TYPE, DESCRIPTION, SORT_ORDER, RESOURCE_PARENT  )
VALUES ( 'web-000018', 'boardInsertUrl', '/board/boardInsert.do', 'url', '글쓰기', 1, 'web-000012'  )
INTO SECURED_RESOURCES( RESOURCE_ID, RESOURCE_NAME, RESOURCE_PATTERN, RESOURCE_TYPE, DESCRIPTION, SORT_ORDER, RESOURCE_PARENT  )
VALUES ( 'web-000019', 'boardDeleteUrl', '/board/boardDelete.do', 'url', '글삭제', 1, 'web-000012'  )

INTO SECURED_RESOURCES( RESOURCE_ID, RESOURCE_NAME, RESOURCE_PATTERN, RESOURCE_TYPE, DESCRIPTION, SORT_ORDER, RESOURCE_PARENT  )
VALUES ( 'web-000020', 'memberUrl', '/member/**', 'url', '회원관리', 5, 'web-000001' )
INTO SECURED_RESOURCES( RESOURCE_ID, RESOURCE_NAME, RESOURCE_PATTERN, RESOURCE_TYPE, DESCRIPTION, SORT_ORDER, RESOURCE_PARENT  )
VALUES ( 'web-000021', 'memberListUrl', '/member/memberList.do', 'url', '목록조회', 1, 'web-000020' )
INTO SECURED_RESOURCES( RESOURCE_ID, RESOURCE_NAME, RESOURCE_PATTERN, RESOURCE_TYPE, DESCRIPTION, SORT_ORDER, RESOURCE_PARENT  )
VALUES ( 'web-000022', 'registMemberUrl', '/member/memberInsert.do', 'url', '신규가입', 1, 'web-000020' )
INTO SECURED_RESOURCES( RESOURCE_ID, RESOURCE_NAME, RESOURCE_PATTERN, RESOURCE_TYPE, DESCRIPTION, SORT_ORDER, RESOURCE_PARENT  )
VALUES ( 'web-000023', 'idCheckUrl', '/member/idCheck', 'url', '아이디체크', 1, 'web-000020' )

INTO SECURED_RESOURCES( RESOURCE_ID, RESOURCE_NAME, RESOURCE_PATTERN, RESOURCE_TYPE, DESCRIPTION, SORT_ORDER, RESOURCE_PARENT  )
VALUES ( 'web-000024', 'mypageUrl', '/mypage.do', 'url', '내정보', 1, 'web-000001' )
INTO SECURED_RESOURCES( RESOURCE_ID, RESOURCE_NAME, RESOURCE_PATTERN, RESOURCE_TYPE, DESCRIPTION, SORT_ORDER, RESOURCE_PARENT  )
VALUES ( 'web-000025', 'modifyMemberUrl', '/member/memberUpdate.do', 'url', '내정보수정', 1, 'web-000024' )
INTO SECURED_RESOURCES( RESOURCE_ID, RESOURCE_NAME, RESOURCE_PATTERN, RESOURCE_TYPE, DESCRIPTION, SORT_ORDER, RESOURCE_PARENT  )
VALUES ( 'web-000026', 'removeMemberUrl', '/member/memberDelete.do', 'url', '회원탈퇴', 1, 'web-000024' )

INTO SECURED_RESOURCES( RESOURCE_ID, RESOURCE_NAME, RESOURCE_PATTERN, RESOURCE_TYPE, DESCRIPTION, SORT_ORDER, RESOURCE_PARENT )
VALUES ( 'web-000027', 'buyerUrl', '/buyer/**', 'url', '거래처관리', 5, 'web-000001' )
INTO SECURED_RESOURCES( RESOURCE_ID, RESOURCE_NAME, RESOURCE_PATTERN, RESOURCE_TYPE, DESCRIPTION, SORT_ORDER, RESOURCE_PARENT )
VALUES ( 'web-000028', 'buyerListUrl', '/buyer/buyerList.do', 'url', '목록조회', 1, 'web-000027' )
INTO SECURED_RESOURCES( RESOURCE_ID, RESOURCE_NAME, RESOURCE_PATTERN, RESOURCE_TYPE, DESCRIPTION, SORT_ORDER, RESOURCE_PARENT )
VALUES ( 'web-000029', 'buyerViewUrl', '/buyer/buyerView.do', 'url', '상세조회', 1, 'web-000027' )
INTO SECURED_RESOURCES( RESOURCE_ID, RESOURCE_NAME, RESOURCE_PATTERN, RESOURCE_TYPE, DESCRIPTION, SORT_ORDER, RESOURCE_PARENT )
VALUES ( 'web-000030', 'buyerUpdateUrl', '/buyer/buyerUpdate.do', 'url', '정보수정', 1, 'web-000027' )
INTO SECURED_RESOURCES( RESOURCE_ID, RESOURCE_NAME, RESOURCE_PATTERN, RESOURCE_TYPE, DESCRIPTION, SORT_ORDER, RESOURCE_PARENT )
VALUES ( 'web-000031', 'buyerInsertUrl', '/buyer/buyerInsert.do', 'url', '신규등록', 1, 'web-000027' )

INTO SECURED_RESOURCES( RESOURCE_ID, RESOURCE_NAME, RESOURCE_PATTERN, RESOURCE_TYPE, DESCRIPTION, SORT_ORDER, RESOURCE_PARENT )
VALUES ( 'web-000032', 'prodUrl', '/prod/**', 'url', '상품관리', 5, 'web-000001' )
INTO SECURED_RESOURCES( RESOURCE_ID, RESOURCE_NAME, RESOURCE_PATTERN, RESOURCE_TYPE, DESCRIPTION, SORT_ORDER, RESOURCE_PARENT )
VALUES ( 'web-000033', 'prodListUrl', '/prod/prodList.do', 'url', '목록조회', 1, 'web-000032' )
INTO SECURED_RESOURCES( RESOURCE_ID, RESOURCE_NAME, RESOURCE_PATTERN, RESOURCE_TYPE, DESCRIPTION, SORT_ORDER, RESOURCE_PARENT )
VALUES ( 'web-000034', 'prodViewUrl', '/prod/prodView.do', 'url', '상세조회', 1, 'web-000032' )
INTO SECURED_RESOURCES( RESOURCE_ID, RESOURCE_NAME, RESOURCE_PATTERN, RESOURCE_TYPE, DESCRIPTION, SORT_ORDER, RESOURCE_PARENT )
VALUES ( 'web-000035', 'prodUpdateUrl', '/prod/prodUpdate.do', 'url', '정보수정', 1, 'web-000032' )
INTO SECURED_RESOURCES( RESOURCE_ID, RESOURCE_NAME, RESOURCE_PATTERN, RESOURCE_TYPE, DESCRIPTION, SORT_ORDER, RESOURCE_PARENT )
VALUES ( 'web-000036', 'prodInsertUrl', '/prod/prodInsert.do', 'url', '신규등록', 1, 'web-000032' )
SELECT * FROM DUAL;

CREATE TABLE SECURED_RESOURCES_ROLE (
	RESOURCE_ID VARCHAR(10) NOT NULL,
	AUTHORITY VARCHAR(50) NOT NULL,
	CONSTRAINT PK_SECURED_RESOURCES_ROLE PRIMARY KEY(RESOURCE_ID,AUTHORITY),
	CONSTRAINT FK_SECURED_RESOURCES FOREIGN KEY(RESOURCE_ID) REFERENCES SECURED_RESOURCES(RESOURCE_ID),
	CONSTRAINT FK_ROLES4 FOREIGN KEY (AUTHORITY) REFERENCES ROLES(AUTHORITY)
);
INSERT INTO SECURED_RESOURCES_ROLE (RESOURCE_ID, AUTHORITY) 
SELECT RESOURCE_ID, 'IS_AUTHENTICATED_ANONYMOUSLY'
FROM SECURED_RESOURCES;


